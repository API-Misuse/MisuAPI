commit 3ef8e50997b8f11e1b8491da95dbf2cc5908b9ba
Author: Haifeng <jhfjhfj1@gmail.com>
Date:   Wed Dec 20 16:44:46 2017 -0600

    bug fixed

diff --git a/autokeras/classifier.py b/autokeras/classifier.py
index ae58a27..098a85e 100644
--- a/autokeras/classifier.py
+++ b/autokeras/classifier.py
@@ -7,11 +7,12 @@ from sklearn.model_selection import train_test_split
 from autokeras import constant
 from autokeras.generator import RandomConvClassifierGenerator
 from autokeras.preprocessor import OneHotEncoder
-from autokeras.utils import ModelTrainer, clear_path
+from autokeras.utils import ModelTrainer, ensure_dir
 
 
 def load_from_path(path=constant.DEFAULT_SAVE_PATH):
-    classifier = pickle.load(os.path.join(path, 'config'))
+    classifier = pickle.load(open(os.path.join(path, 'config'), 'rb'))
+    classifier.path = path
     return classifier
 
 
@@ -25,7 +26,8 @@ class ClassifierBase:
         self.history = []
         self.training_losses = []
         self.path = path
-        self.current_iteration = 0
+        self.current_iteration = -1
+        ensure_dir(path)
 
     def _validate(self, x_train, y_train):
         try:
@@ -60,21 +62,21 @@ class ClassifierBase:
         # Divide training data into training and testing data.
         x_train, x_test, y_train, y_test = train_test_split(x_train, y_train, test_size=0.33, random_state=42)
 
-        for i in range(self.current_iteration, constant.MAX_MODEL_NUM):
+        for i in range(self.current_iteration + 1, constant.MAX_MODEL_NUM):
             model = self.generator.generate()
 
             if self.verbose:
                 model.summary()
 
             ModelTrainer(model, x_train, y_train, x_test, y_test, self.verbose).train_model()
-            model.save(str(i) + '.h5')
+            model.save(os.path.join(self.path, str(i) + '.h5'))
             loss, accuracy = model.evaluate(x_test, y_test)
             self.history.append({'model_id': i, 'loss': loss, 'accuracy': accuracy})
             self.current_iteration = i
-            pickle.dump(self, os.path.join(self.path, 'config'))
+            pickle.dump(self, open(os.path.join(self.path, 'config'), 'wb'))
 
         self.history.sort(key=lambda x: x['accuracy'])
-        self.model = load_model(self.history[-1]['model_id'] + '.h5')
+        self.model = load_model(os.path.join(self.path, str(self.history[-1]['model_id']) + '.h5'))
 
     def predict(self, x_test):
         return self.y_encoder.inverse_transform(self.model.predict(x_test, verbose=self.verbose))
diff --git a/autokeras/utils.py b/autokeras/utils.py
index 06f6bfa..8cfccff 100644
--- a/autokeras/utils.py
+++ b/autokeras/utils.py
@@ -1,3 +1,4 @@
+import os
 from keras.layers import Conv1D, Conv2D, Conv3D
 from autokeras.constant import CONV_FUNC_LIST, LAYER_ATTR
 from autokeras import constant
@@ -72,3 +73,12 @@ def extract_config(network):
             important_attr[attr] = layer_config[attr]
         config['config'].append(important_attr)
     return config
+
+
+def ensure_dir(directory):
+    if not os.path.exists(directory):
+        os.makedirs(directory)
+
+
+def ensure_file_dir(path):
+    ensure_dir(os.path.dirname(path))
diff --git a/tests/test_classifier.py b/tests/test_classifier.py
index cbe455a..07bfa5f 100644
--- a/tests/test_classifier.py
+++ b/tests/test_classifier.py
@@ -55,11 +55,13 @@ def test_save_continue():
     train_x = np.random.rand(100, 25, 1)
     test_x = np.random.rand(100, 25, 1)
     train_y = np.random.randint(0, 5, 100)
-    clf = ImageClassifier(path='resources/temp')
+    clf = ImageClassifier(path='tests/resources/temp')
     clf.n_epochs = 100
     clf.fit(train_x, train_y)
 
     constant.MAX_MODEL_NUM = 4
-    clf = load_from_path(path='resources/temp')
+    clf = load_from_path(path='tests/resources/temp')
+    clf.fit(train_x, train_y)
     results = clf.predict(test_x)
     assert len(results) == 100
+    assert len(clf.history) == 4
