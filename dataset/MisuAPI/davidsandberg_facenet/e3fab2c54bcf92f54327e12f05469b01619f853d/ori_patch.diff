commit e3fab2c54bcf92f54327e12f05469b01619f853d
Author: David Sandberg <david.o.sandberg@gmail.com>
Date:   Sat Mar 5 11:21:28 2016 +0100

    Fixed problem with non-existing model directory

diff --git a/facenet/src/facenet.py b/facenet/src/facenet.py
index 1115ae8..afb6be7 100644
--- a/facenet/src/facenet.py
+++ b/facenet/src/facenet.py
@@ -525,7 +525,6 @@ def get_dataset(paths):
     classes = os.listdir(path)
     classes.sort()
     nrof_classes = len(classes)
-    #dataset = [None] * nrof_classes
     for i in range(nrof_classes):
       class_name = classes[i]
       facedir = os.path.join(path, class_name)
diff --git a/facenet/src/facenet_train.py b/facenet/src/facenet_train.py
index 559ccf3..15dd82d 100644
--- a/facenet/src/facenet_train.py
+++ b/facenet/src/facenet_train.py
@@ -54,8 +54,7 @@ tf.app.flags.DEFINE_float('train_set_fraction', 0.9,
 tf.app.flags.DEFINE_integer('seed', 666,
                             """Random seed.""")
 
-
-def train():
+def main(argv=None):  # pylint: disable=unused-argument
   if FLAGS.model_name:
     subdir = FLAGS.model_name
     preload_model = True
@@ -64,6 +63,8 @@ def train():
     preload_model = False
   log_dir = os.path.join(FLAGS.logs_base_dir, subdir)
   model_dir = os.path.join(FLAGS.models_base_dir, subdir)
+  if not os.path.isdir(model_dir):  # Create the model directory if it doesn't exist
+    os.mkdir(model_dir)
   
   np.random.seed(seed=FLAGS.seed)
   dataset = facenet.get_dataset(FLAGS.data_dir)
@@ -174,8 +175,7 @@ def train_epoch(sess, dataset, epoch, images_placeholder, phase_train_placeholde
       else:
         err, _, step  = sess.run([loss, train_op, global_step], feed_dict=feed_dict)
       duration = time.time() - start_time
-      if (batch_number%20==0):
-        print('Epoch: [%d][%d/%d]\tTime %.3f\ttripErr %2.3f' % (epoch, batch_number, FLAGS.epoch_size, duration, err))
+      print('Epoch: [%d][%d/%d]\tTime %.3f\ttripErr %2.3f' % (epoch, batch_number, FLAGS.epoch_size, duration, err))
       batch_number+=1
       i+=1
   return step
@@ -220,11 +220,6 @@ def validate_epoch(sess, dataset, epoch, images_placeholder, phase_train_placeho
   actual_issame = [True]*anchor.shape[0] + [False]*anchor.shape[0]
   tpr, fpr, accuracy, predict_issame, dist = facenet.calculate_roc(thresholds, embeddings1, embeddings2, actual_issame)
   print('Epoch: [%d]\tTime %.3f\ttripErr %2.3f\taccuracy %1.3f' % (epoch, duration, np.mean(loss_list), np.max(accuracy)))
-  xxx = 1
-
-def main(argv=None):  # pylint: disable=unused-argument
-  train()
-
 
 if __name__ == '__main__':
   tf.app.run()
