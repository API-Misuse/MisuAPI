commit 01152ff8213da2bd974e6df2cbb8c55a94af7cc9
Author: Lee Yang <leewyang@verizonmedia.com>
Date:   Tue Feb 25 12:49:41 2020 -0800

    add error msg for missing executor_id; add msg to check for exceptions on other nodes

diff --git a/tensorflowonspark/TFSparkNode.py b/tensorflowonspark/TFSparkNode.py
index e7234de..e0388d2 100644
--- a/tensorflowonspark/TFSparkNode.py
+++ b/tensorflowonspark/TFSparkNode.py
@@ -137,8 +137,9 @@ def _get_manager(cluster_info, host, executor_id):
   if TFSparkNode.mgr is None:
     msg = "No TFManager found on this node, please ensure that:\n" + \
           "1. Spark num_executors matches TensorFlow cluster_size\n" + \
-          "2. Spark cores/tasks per executor is 1.\n" + \
-          "3. Spark dynamic allocation is disabled."
+          "2. Spark tasks per executor is 1\n" + \
+          "3. Spark dynamic allocation is disabled\n" + \
+          "4. There are no other root-cause exceptions on other nodes\n"
     raise Exception(msg)
 
   logger.info("Connected to TFSparkNode.mgr on {0}, executor={1}, state={2}".format(host, executor_id, str(TFSparkNode.mgr.get('state'))))
diff --git a/tensorflowonspark/util.py b/tensorflowonspark/util.py
index 0d6c662..fb4cc73 100644
--- a/tensorflowonspark/util.py
+++ b/tensorflowonspark/util.py
@@ -82,5 +82,13 @@ def write_executor_id(num):
 
 def read_executor_id():
   """Read worker id from a local file in the executor's current working directory"""
-  with open("executor_id", "r") as f:
-    return int(f.read())
+  if os.path.isfile("executor_id"):
+    with open("executor_id", "r") as f:
+      return int(f.read())
+  else:
+    msg = "No executor_id file found on this node, please ensure that:\n" + \
+          "1. Spark num_executors matches TensorFlow cluster_size\n" + \
+          "2. Spark tasks per executor is 1\n" + \
+          "3. Spark dynamic allocation is disabled\n" + \
+          "4. There are no other root-cause exceptions on other nodes\n"
+    raise Exception(msg)
