sha: 8c4a33d2d5ea46a6aa6e5d1a39e194055e56b783
message: "Support delete multiple bento at once and misc error handling (#546)\n\n\
  * allow delete multiple bento\r\n\r\n* return proper error when bento service to\
  \ be deleted is not found\r\n\r\n* raise proper exception when saving to same directory\
  \ again\r\n\r\n* fail gracefully when BentoService files in target local repo have\
  \ already been deleted"
commit_log: "commit 8c4a33d2d5ea46a6aa6e5d1a39e194055e56b783\nAuthor: Chaoyu <paranoyang@gmail.com>\n\
  Date:   Wed Feb 26 17:44:25 2020 -0800\n\n    Support delete multiple bento at once\
  \ and misc error handling (#546)\n    \n    * allow delete multiple bento\n    \n\
  \    * return proper error when bento service to be deleted is not found\n    \n\
  \    * raise proper exception when saving to same directory again\n    \n    * fail\
  \ gracefully when BentoService files in target local repo have already been deleted"
contained_keywords:
- error
- fail
commit_time: 2020-02-26 17:44:25 -0800
commit_author: Chaoyu
added_files: 0
removed_files: 0
modified_files: 5
patched_file_0:
  is_added_file: false
  is_removed_file: false
  is_modified_file: true
  is_binary_file: false
  is_rename: false
  path: bentoml/bundler/bundler.py
  source_file: a/bentoml/bundler/bundler.py
  target_file: b/bentoml/bundler/bundler.py
  added: 6
  removed: 1
  add_line_no:
  - - 82
    - '    try:

      '
  - - 83
    - '        os.mkdir(module_base_path)

      '
  - - 84
    - '    except FileExistsError:

      '
  - - 85
    - '        raise BentoMLException(

      '
  - - 86
    - '            f"Existing module file found for BentoService {bento_service.name}"

      '
  - - 87
    - '        )

      '
  del_line_no:
  - - null
    - '    os.mkdir(module_base_path)

      '
patched_file_1:
  is_added_file: false
  is_removed_file: false
  is_modified_file: true
  is_binary_file: false
  is_rename: false
  path: bentoml/cli/bento.py
  source_file: a/bentoml/cli/bento.py
  target_file: b/bentoml/cli/bento.py
  added: 38
  removed: 29
  add_line_no:
  - - 18
    - 'from bentoml.cli.click_utils import (

      '
  - - 19
    - '    CLI_COLOR_ERROR,

      '
  - - 20
    - '    _echo,

      '
  - - 21
    - '    parse_bento_tag_list_callback,

      '
  - - 22
    - ')

      '
  - - 178
    - '    @click.argument("bentos", type=click.STRING, callback=parse_bento_tag_list_callback)

      '
  - - 182
    - '    def delete(bentos, yes):

      '
  - - 187
    - '

      '
  - - 188
    - '        `bentoml delete` command also supports deleting multiple saved BentoService
      at

      '
  - - 189
    - '        once, by providing name version tag separated by ",", for example:

      '
  - - 190
    - '

      '
  - - 191
    - '        `bentoml delete iris_classifier:v1.2.0,my_svc:v1,my_svc2:v3`

      '
  - - 194
    - '        for bento in bentos:

      '
  - - 195
    - '            name, version = bento.split('':'')

      '
  - - 196
    - '            if not name and not version:

      '
  - - 197
    - '                _echo(

      '
  - - 198
    - '                    ''BentoService name or version is missing. Please provide
      in the ''

      '
  - - 199
    - '                    ''format of name:version'',

      '
  - - 200
    - '                    CLI_COLOR_ERROR,

      '
  - - 201
    - '                )

      '
  - - 202
    - '                return

      '
  - - 203
    - '            if not yes and not click.confirm(

      '
  - - 204
    - '                f''Are you sure about delete {bento}? This will delete the
      BentoService ''

      '
  - - 205
    - '                f''saved bundle files permanently''

      '
  - - 206
    - '            ):

      '
  - - 207
    - '                return

      '
  - - 208
    - '            result = yatai_client.repository.dangerously_delete_bento(

      '
  - - 209
    - '                name=name, version=version

      '
  - - 211
    - '            if result.status.status_code != status_pb2.Status.OK:

      '
  - - 212
    - '                error_code, error_message = status_pb_to_error_code_and_message(

      '
  - - 213
    - '                    result.status

      '
  - - 214
    - '                )

      '
  - - 215
    - '                _echo(

      '
  - - 216
    - '                    f''Failed to delete Bento {name}:{version} ''

      '
  - - 217
    - '                    f''{error_code}:{error_message}'',

      '
  - - 218
    - '                    CLI_COLOR_ERROR,

      '
  - - 219
    - '                )

      '
  - - 220
    - '            _echo(f''BentoService {name}:{version} deleted'')

      '
  del_line_no:
  - - null
    - 'from bentoml.cli.click_utils import CLI_COLOR_ERROR, _echo, parse_bento_tag_callback

      '
  - - null
    - '    @click.argument("bento", type=click.STRING, callback=parse_bento_tag_callback)

      '
  - - null
    - '    def delete(bento, yes):

      '
  - - null
    - '        name, version = bento.split('':'')

      '
  - - null
    - '        if not name and not version:

      '
  - - null
    - '            _echo(

      '
  - - null
    - '                ''BentoService name or version is missing. Please provide in
      the ''

      '
  - - null
    - '                ''format of name:version'',

      '
  - - null
    - '                CLI_COLOR_ERROR,

      '
  - - null
    - '            )

      '
  - - null
    - '            return

      '
  - - null
    - '        if not yes and not click.confirm(

      '
  - - null
    - '            f''Are you sure about delete {bento}? This will delete the BentoService
      ''

      '
  - - null
    - '            f''saved bundle files permanently''

      '
  - - null
    - '        ):

      '
  - - null
    - '            return

      '
  - - null
    - '        result = yatai_client.repository.dangerously_delete_bento(

      '
  - - null
    - '            name=name, version=version

      '
  - - null
    - '        )

      '
  - - null
    - '        if result.status.status_code != status_pb2.Status.OK:

      '
  - - null
    - '            error_code, error_message = status_pb_to_error_code_and_message(

      '
  - - null
    - '                result.status

      '
  - - null
    - '            )

      '
  - - null
    - '            _echo(

      '
  - - null
    - '                f''Failed to delete Bento {name}:{version} ''

      '
  - - null
    - '                f''{error_code}:{error_message}'',

      '
  - - null
    - '                CLI_COLOR_ERROR,

      '
  - - null
    - '            return

      '
  - - null
    - '        _echo(f''BentoService {name}:{version} deleted'')

      '
patched_file_2:
  is_added_file: false
  is_removed_file: false
  is_modified_file: true
  is_binary_file: false
  is_rename: false
  path: bentoml/cli/click_utils.py
  source_file: a/bentoml/cli/click_utils.py
  target_file: b/bentoml/cli/click_utils.py
  added: 18
  removed: 2
  add_line_no:
  - - 126
    - 'def _is_valid_bento_tag(value):

      '
  - - 127
    - '    return re.match(r"^[A-Za-z_][A-Za-z_0-9]*:[A-Za-z0-9.+-_]*$", value) is
      not None

      '
  - - 128
    - '

      '
  - - 129
    - '

      '
  - - 131
    - '    if not _is_valid_bento_tag(value):

      '
  - - 139
    - 'def parse_bento_tag_list_callback(ctx, param, value):  # pylint: disable=unused-argument

      '
  - - 140
    - '    bento_tags = value.split(",")

      '
  - - 141
    - '    bento_tags = list(map(str.strip, bento_tags))

      '
  - - 142
    - '    for bento_tag in bento_tags:

      '
  - - 143
    - '        if not _is_valid_bento_tag(bento_tag):

      '
  - - 144
    - '            raise click.BadParameter(

      '
  - - 145
    - '                "Bad formatting. Please present in BentoName:Version, for example
      "

      '
  - - 146
    - '                "\"iris_classifier:v1.2.0\". For list of BentoService, separate
      tags "

      '
  - - 147
    - '                "by \",\", for example: \"my_service:v1,my_service:v2,classifier:v3\""

      '
  - - 148
    - '            )

      '
  - - 149
    - '    return bento_tags

      '
  - - 150
    - '

      '
  - - 151
    - '

      '
  del_line_no:
  - - null
    - '    if re.match(r"^[A-Za-z_][A-Za-z_0-9]*:[A-Za-z0-9.+-_]*$", value) is None:

      '
  - - null
    - '

      '
patched_file_3:
  is_added_file: false
  is_removed_file: false
  is_modified_file: true
  is_binary_file: false
  is_rename: false
  path: bentoml/repository/__init__.py
  source_file: a/bentoml/repository/__init__.py
  target_file: b/bentoml/repository/__init__.py
  added: 13
  removed: 1
  add_line_no:
  - - 23
    - 'import logging

      '
  - - 34
    - 'logger = logging.getLogger(__name__)

      '
  - - 35
    - '

      '
  - - 36
    - '

      '
  - - 120
    - '        try:

      '
  - - 121
    - '            return shutil.rmtree(saved_path)

      '
  - - 122
    - '        except FileNotFoundError:

      '
  - - 123
    - '            logger.warning(

      '
  - - 124
    - '                "BentoService %s:%s has already been deleted from local storage",

      '
  - - 125
    - '                bento_name,

      '
  - - 126
    - '                bento_version,

      '
  - - 127
    - '            )

      '
  - - 128
    - '            return

      '
  del_line_no:
  - - null
    - '        return shutil.rmtree(saved_path)

      '
patched_file_4:
  is_added_file: false
  is_removed_file: false
  is_modified_file: true
  is_binary_file: false
  is_rename: false
  path: bentoml/yatai/yatai_service_impl.py
  source_file: a/bentoml/yatai/yatai_service_impl.py
  target_file: b/bentoml/yatai/yatai_service_impl.py
  added: 10
  removed: 0
  add_line_no:
  - - 312
    - '            bento_metadata_pb = self.bento_metadata_store.get(

      '
  - - 313
    - '                request.bento_name, request.bento_version

      '
  - - 314
    - '            )

      '
  - - 315
    - '            if not bento_metadata_pb:

      '
  - - 316
    - '                msg = (

      '
  - - 317
    - '                    f"BentoService {request.bento_name}:{request.bento_version}
      "

      '
  - - 318
    - '                    f"has already been deleted"

      '
  - - 319
    - '                )

      '
  - - 320
    - '                return DangerouslyDeleteBentoResponse(status=Status.ABORTED(msg))

      '
  - - 321
    - '

      '
  del_line_no: []
