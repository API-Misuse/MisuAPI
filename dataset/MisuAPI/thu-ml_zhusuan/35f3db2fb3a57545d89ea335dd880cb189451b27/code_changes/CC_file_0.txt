UPD @type:for_stmt@ @[5992,6242]@ for i in range(1, 6):
        batch_file = os.path <text_longer_than_50> @TO@ @type:for_stmt@ @[6011,6281]@ for i in range(1, 6):
        batch_file = os.path <text_longer_than_50>
---UPD @type:suite@ @[6013,6242]@ batch_file = os.path.join(batch_dir, 'data_batch_' <text_longer_than_50> @TO@ @type:suite@ @[6032,6281]@ batch_file = os.path.join(batch_dir, 'data_batch_' <text_longer_than_50>
------UPD @type:with_stmt@ @[6091,6242]@ with open(batch_file, 'r') as f:
            data  <text_longer_than_50> @TO@ @type:with_stmt@ @[6110,6281]@ with open(batch_file, 'rb') as f:
            data <text_longer_than_50>
---------UPD @type:with_item@ @[6096,6122]@ open(batch_file, 'r') as f @TO@ @type:with_item@ @[6115,6142]@ open(batch_file, 'rb') as f
------------UPD @type:atom_expr@ @[6096,6117]@ open(batch_file, 'r') @TO@ @type:atom_expr@ @[6115,6137]@ open(batch_file, 'rb')
---------------UPD @type:trailer@ @[6100,6117]@ (batch_file, 'r') @TO@ @type:trailer@ @[6119,6137]@ (batch_file, 'rb')
------------------UPD @type:arglist@ @[6101,6116]@ batch_file, 'r' @TO@ @type:arglist@ @[6120,6136]@ batch_file, 'rb'
---------------------UPD @type:string@ @[6113,6116]@ 'r' @TO@ @type:string@ @[6132,6136]@ 'rb'
---------UPD @type:suite@ @[6123,6242]@ data = pickle.load(f)
            train_x.append(d <text_longer_than_50> @TO@ @type:suite@ @[6143,6281]@ data = pickle.load(f, encoding='latin1')
          <text_longer_than_50>
------------UPD @type:simple_stmt@ @[6136,6158]@ data = pickle.load(f) @TO@ @type:simple_stmt@ @[6156,6197]@ data = pickle.load(f, encoding='latin1')
---------------UPD @type:expr_stmt@ @[6136,6157]@ data = pickle.load(f) @TO@ @type:expr_stmt@ @[6156,6196]@ data = pickle.load(f, encoding='latin1')
------------------UPD @type:atom_expr@ @[6143,6157]@ pickle.load(f) @TO@ @type:atom_expr@ @[6163,6196]@ pickle.load(f, encoding='latin1')
---------------------UPD @type:trailer@ @[6154,6157]@ (f) @TO@ @type:trailer@ @[6174,6196]@ (f, encoding='latin1')
------------------------INS @type:arglist@ @[6175,6195]@ f, encoding='latin1' @TO@ @type:trailer@ @[6154,6157]@ (f)
------------------------MOV @type:name@ @[6155,6156]@ f @TO@ @type:arglist@ @[6175,6195]@ f, encoding='latin1'


UPD @type:with_stmt@ @[6373,6515]@ with open(test_batch_file, 'r') as f:
        data <text_longer_than_50> @TO@ @type:with_stmt@ @[6412,6574]@ with open(test_batch_file, 'rb') as f:
        dat <text_longer_than_50>
---UPD @type:with_item@ @[6378,6409]@ open(test_batch_file, 'r') as f @TO@ @type:with_item@ @[6417,6449]@ open(test_batch_file, 'rb') as f
------UPD @type:atom_expr@ @[6378,6404]@ open(test_batch_file, 'r') @TO@ @type:atom_expr@ @[6417,6444]@ open(test_batch_file, 'rb')
---------UPD @type:trailer@ @[6382,6404]@ (test_batch_file, 'r') @TO@ @type:trailer@ @[6421,6444]@ (test_batch_file, 'rb')
------------UPD @type:arglist@ @[6383,6403]@ test_batch_file, 'r' @TO@ @type:arglist@ @[6422,6443]@ test_batch_file, 'rb'
---------------UPD @type:string@ @[6400,6403]@ 'r' @TO@ @type:string@ @[6439,6443]@ 'rb'
---UPD @type:suite@ @[6410,6515]@ data = pickle.load(f)
        test_x = data['data' <text_longer_than_50> @TO@ @type:suite@ @[6450,6574]@ data = pickle.load(f, encoding='latin1')
        t <text_longer_than_50>
------UPD @type:simple_stmt@ @[6419,6441]@ data = pickle.load(f) @TO@ @type:simple_stmt@ @[6459,6500]@ data = pickle.load(f, encoding='latin1')
---------UPD @type:expr_stmt@ @[6419,6440]@ data = pickle.load(f) @TO@ @type:expr_stmt@ @[6459,6499]@ data = pickle.load(f, encoding='latin1')
------------UPD @type:atom_expr@ @[6426,6440]@ pickle.load(f) @TO@ @type:atom_expr@ @[6466,6499]@ pickle.load(f, encoding='latin1')
---------------UPD @type:trailer@ @[6437,6440]@ (f) @TO@ @type:trailer@ @[6477,6499]@ (f, encoding='latin1')
------------------INS @type:arglist@ @[6478,6498]@ f, encoding='latin1' @TO@ @type:trailer@ @[6437,6440]@ (f)
------------------MOV @type:name@ @[6438,6439]@ f @TO@ @type:arglist@ @[6478,6498]@ f, encoding='latin1'


